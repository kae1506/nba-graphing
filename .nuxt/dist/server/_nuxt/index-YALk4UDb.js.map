{"version":3,"file":"index-YALk4UDb.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"js\">\nlet chartComponent = shallowRef(null); // create a ref to hold the component\n\n\nonMounted(async () => {  // onMounted means basically when the window is loaded, and compnent is mounted\n  const VueApexCharts = (await import('vue3-apexcharts')).default;\n  chartComponent.value = VueApexCharts;\n});\n\nconst playerIndex = [\n    'Stephen Curry',\n    'LeBron James',\n    'Kevin Durant',\n    'Kawhi Leonard',\n    'Giannis Antetokounmpo',\n    'James Harden',\n    'Luka Dončić',\n    'Nikola Jokić',\n    'Joel Embiid',\n    'Anthony Davis',\n    'Damian Lillard',\n    'Chris Paul',\n    'Jayson Tatum',\n    'Zion Williamson',\n    'Jimmy Butler',\n    'Paul George',\n    'Kyrie Irving',\n    'Russell Westbrook',\n    'Anthony Edwards',\n    'Trae Young',\n    'Devin Booker'\n]\n\nlet players = ref([\n\n]);\n\nlet newPlayer = ref('') // to hold the player name\n\nfunction addPlayer() {\n  if (newPlayer.value !== '') {\n    players.value.push(newPlayer.value);\n    newPlayer.value = ''; // clear the input field\n  }\n}\n\n// using refs, to create a reactive variable\nconst chartOptions = ref({\n  chart: {\n    id: \"vuechart-example\",\n  },\n  \n\n  xaxis: {\n    show: true,\n    showAlways: true,\n    axisBorder: {\n      show: true,\n      color: '#78909C',\n    },\n    title: {\n      text: 'PPG',\n      style: {\n        color: 'white',\n        fontSize: '18px',\n        fontFamily: 'Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        cssClass: 'apexcharts-xaxis-title',\n      },\n    },\n    tickPlacement: 'between',\n    tickAmount: 10,\n\n\n    labels: \n    {\n      formatter: function(val) {\n        return parseFloat(val).toFixed(2)\n      }\n    }\n  },\n\n  yaxis: {\n    show: true,\n    showAlways: true,\n    axisBorder: {\n      show: true,\n      color: '#78909C',\n    },\n    title: {\n      text: 'APG',\n      style: {\n        color: 'white',\n        fontSize: '18px',\n        fontFamily: 'Helvetica, Arial, sans-serif',\n        fontWeight: 600,\n        cssClass: 'apexcharts-xaxis-title',\n      },\n    }\n  },\n\n  theme: {\n    palette: 'palette5', // default palette\n    monochrome: {\n      enabled: false,\n      // color: '#255aee',\n      shadeTo: 'light',\n      shadeIntensity: 0.65\n    }\n  },\n\n  grid:{\n    show: false,\n    padding: {\n      left: 20,\n      right: 100\n    }\n  },\n\n  chart: {\n    foreColor: 'white'\n  }\n})\n\n\n\n// TODO: add options to choose the specific stat to show\n// stats to add: PPG, APG, RPG, SPG, BPG, TPG, FG%, 3P%, FT%, eFG%\nconst mapper = {\n  PPG: 'points',\n  APG: 'assists',\n  RPG: 'totalRb',\n  SPG: 'steals',\n  BPG: 'blocks',\n  TPG: 'turnovers',\n  FGp: 'fieldPercent',\n  ThPp : 'threePercent',\n  FTp: 'ftPercent',\n  eFGp: 'effectFgPercent'\n}\n\nconst percentages = ['fieldPercent', 'threePercent', 'ftPercent', 'effectFgPercent']\n\n/*\nsample object:\n{\n  age: 25\n  assists: 583\n  blocks: 11\n  defensiveRb: 126\n  effectFgPercent: 0.516\n  fieldAttempts: 1008\n  fieldGoals: 433\n  fieldPercent: 0.43\n  ft: 348\n  ftAttempts: 407\n  ftPercent: 0.855\n  games: 54\n  gamesStarted: 54\n  id: 18710\n  minutesPg: 1942\n  offensiveRb: 23\n  personalFouls: 109\n  playerId: \"youngtr01\"\n  playerName: \"Trae Young\"\n  points: 1389\n  position: \"PG\"\n  season: 2024\n  steals: 72\n  team: \"ATL\"\n  threeAttempts: 469\n  threeFg: 175\n  threePercent: 0.373\n  totalRb: 149\n  turnovers: 235\n  twoAttempts: 539\n  twoFg: 258\n  twoPercent: 0.479\n}\n\n\n*/\n\n// conditional rendering variables\nlet dataObtained = ref(false) // to hold the state\nlet submitClicked = ref(false) // to hold the state\nlet typeOfGraph = ref('') // to hold the type of graph\n\n// data variables\nlet series = ref([]) // to hold the data\n\n// stat vs stat variables\nlet xStatName = ref(null)\nlet yStatName = ref(null)\nlet season = ref(null)\n\n// line graph variables\nlet lineStatName = ref(null)\n\n\nasync function getDataStatVsStat(player, xStat, yStat){\n  let names = player.split(\" \");\n\n  let url = `http://rest.nbaapi.com/api/PlayerDataTotals/query?playerName=${names[0]}%20${names[1]}&season=${season.value}`;\n  return fetch(url)\n    .then(data => data.json())\n    .then(data => {\n      let answer = []\n      \n      if (percentages.includes(xStat)){\n        answer.push(data[0][xStat]*100)\n      } else {\n        answer.push(data[0][xStat]/data[0].games)\n      }\n\n      if (percentages.includes(yStat)){\n        answer.push((data[0][yStat]*100).toFixed(2))\n      } else {\n        answer.push((data[0][yStat]/data[0].games).toFixed(2))\n      }\n      return answer\n    })\n}\n\nasync function getStatNamesLine(player, stat){\n    let names = player.split(\" \");\n    let url = `http://rest.nbaapi.com/api/PlayerDataTotals/query?playerName=${names[0]}%20${names[1]}&pageSize=30`;\n    return fetch(url)\n      .then(data => data.json())\n      .then(data => {\n        let answer = []\n\n        // to sort data\n        data.sort((a, b) => {\n            if (a.season < b.season) {\n                return -1;\n            }\n            if (a.season > b.season) {\n                return 1;\n            }\n            return 0;\n        });\n\n\n\n        for (let yearlyData of data){\n            if (percentages.includes(stat)){\n                answer.push((yearlyData[stat]*100).toFixed(2))\n            } else {\n                answer.push((yearlyData[stat]/yearlyData.games).toFixed(2))\n            }\n        }\n        \n        return answer;\n      })\n      \n}\n\n\nasync function doAllPromises(){\n  //let tings = await getStatNames()\n  if (typeOfGraph.value == 'statVsStat'){\n    chartOptions.value.chart.type = 'scatter'\n    chartOptions.value.dataLabels= {\n        enabled: true,\n        textAnchor: 'start',\n        formatter: function(val, {seriesIndex, dataPointIndex, w }) {\n            return players.value[dataPointIndex];\n        },\n        offsetX: -5,\n        offsetY: -5\n    }\n\n\n    let xStat = mapper[xStatName.value]\n    let yStat = mapper[yStatName.value]\n\n    chartOptions.value.xaxis.title.text = xStatName.value\n    chartOptions.value.yaxis.title.text = yStatName.value\n\n    let ans = Promise.all(players.value.map(player => getDataStatVsStat(player, xStat, yStat)))\n        .then(data => {\n        dataObtained.value = true; // set the state to true\n        series.value = [\n        {\n                name: \"SAMPLE A\",\n                data: data\n        }]\n        return data;\n        \n        }\n    )\n\n\n  } else if (typeOfGraph.value == 'lineGraphSeason'){\n    chartOptions.value.chart.type = 'line'\n    chartOptions.value.legend= {\n        position: 'bottom',\n        horizontalAlign: 'right',\n        floating: true,\n        offsetY: 25,\n        offsetX: -5\n    }\n\n    chartOptions.value.grid.show = true;\n    chartOptions.value.grid.padding.right = 20;\n\n    let stat = mapper[lineStatName.value]\n    chartOptions.value.xaxis.title.text = 'Season'\n    chartOptions.value.yaxis.title.text = lineStatName.value\n\n\n\n    let ans = Promise.all(players.value.map(player => getStatNamesLine(player, stat)))\n        .then(data => {\n        dataObtained.value = true; // set the state to true\n        series.value = players.value.map((player, index) => ({\n            name: player,\n            data: data[index]\n        }))\n        return data;\n        \n        }\n    )\n\n\n\n\n  }\n  \n}\n\nfunction clicked() {\n  doAllPromises() // call the function to get the data\n  submitClicked.value = true; // set the state to true\n}\n\n\n</script>\n\n<template>\n    <div>\n        <h1>Make any NBA graph, fully customisable and fast.</h1>\n        <p>COMING SOON: yearly line graphs, advanced metrics, redesign</p>\n        <div class=\"example-container\">\n            <nuxt-link to=\"/example\">See an example</nuxt-link>\n\n        </div>\n\n        <div v-if=\"dataObtained && submitClicked\" class=\"graph-container\"  >\n            <component :is=\"chartComponent\"  :options=\"chartOptions\" :series=\"series\" class=\"chart\"/>\n        </div>\n\n        \n        <div v-else-if=\"!submitClicked\">\n            <div>\n                <div class=\"form-container\">\n                    <label>Choose a graph type:</label>\n                    <select v-model=\"typeOfGraph\">\n                        <option value=\"statVsStat\">Stat vs Stat</option>\n                        <option value=\"lineGraphSeason\">Line Graph Season</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"form-container\" v-if=\"typeOfGraph == 'statVsStat'\">\n                <div class=\"label-container\">\n                    <div class=\"labels\">\n                        <label>Choose a stat for X Axis:</label>\n                    </div>\n                    <div class=\"labels\">\n                        <label>Choose a stat for Y Axis:</label>\n                    </div>\n\n                </div>\n\n                <div class=\"options-container\">\n\n                    <div class='x-options'>\n                        <select v-model=\"xStatName\">\n                            <option value=\"PPG\">PPG</option>\n                            <option value=\"APG\">APG</option>\n                            <option value=\"RPG\">RPG</option>\n                            <option value=\"SPG\">SPG</option>\n                            <option value=\"BPG\">BPG</option>\n                            <option value=\"TPG\">TPG</option>\n                            <option value=\"FGp\">FG%</option>\n                            <option value=\"ThPp\">3P%</option>\n                            <option value=\"FTp\">FT%</option>\n                            <option value=\"eFGp\">eFG%</option>\n\n                        </select>\n                    </div>\n\n                    <div class=\"y-options\">\n                        <select v-model=\"yStatName\">\n                            <option value=\"PPG\">PPG</option>\n                            <option value=\"APG\">APG</option>\n                            <option value=\"RPG\">RPG</option>\n                            <option value=\"SPG\">SPG</option>\n                            <option value=\"BPG\">BPG</option>\n                            <option value=\"TPG\">TPG</option>\n                            <option value=\"FGp\">FG%</option>\n                            <option value=\"ThPp\">3P%</option>\n                            <option value=\"FTp\">FT%</option>\n                            <option value=\"eFGp\">eFG%</option>\n\n                        </select>\n                    </div>\n                </div>\n            \n\n                <div class=\"season-container\">\n                    <label>Choose Season:</label>\n\n                    <div class=\"season-options\">\n                        <select v-model=\"season\">\n                            <option value=2025>2025</option>\n                            <option value=2024>2024</option>\n                            <option value=2023>2023</option>\n                            <option value=2022>2022</option>\n                            <option value=2021>2021</option>\n                            <option value=2020>2020</option>\n                            <option value=2019>2019</option>\n                            <option value=2018>2018</option>   \n                            <option value=2017>2017</option>\n                            <option value=2016>2016</option>\n                            <option value=2015>2015</option>\n                            <option value=2014>2014</option>\n                            <option value=2013>2013</option>\n                            <option value=2012>2012</option>\n\n\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n            <div v-else-if=\"typeOfGraph == 'lineGraphSeason'\">\n                <div>\n                    <p>Note: This graph can currently only support 5 players at a time.</p>\n                    <label>Choose a stat: </label>\n                    <select v-model=\"lineStatName\">\n                        <option value=\"PPG\">PPG</option>\n                        <option value=\"APG\">APG</option>\n                        <option value=\"RPG\">RPG</option>\n                        <option value=\"SPG\">SPG</option>\n                        <option value=\"BPG\">BPG</option>\n                        <option value=\"TPG\">TPG</option>\n                        <option value=\"FGp\">FG%</option>\n                        <option value=\"ThPp\">3P%</option>\n                        <option value=\"FTp\">FT%</option>\n                        <option value=\"eFGp\">eFG%</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"player-container\">\n                <label>Add Players:</label>\n                <div class=\"player-input-container\">\n                    <input type=\"text\" v-model=\"newPlayer\" placeholder=\"Enter player name\" />\n                    <button class=\"player-button\" @click=\"addPlayer\">Add Player</button>\n                </div>\n\n                <label>Or Control/Command-Click to choose from these: </label>\n                <div class=\"player-list-options\">\n                    <select v-model=\"players\" multiple>\n                        <option class=\"list-item\" v-for=\"(player, index) in playerIndex\" :key=\"index\" :value=\"player\">\n                            {{ player }}\n                        </option>  \n                    </select>\n                </div>\n\n                <div class=\"player-list\">\n                    <ul>\n                        <li v-for=\"(player, index) in players\" :key=\"index\">\n                            {{ player }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class=\"submit-container\">\n                <button @click=\"clicked\">Submit</button>\n            </div>\n         </div>\n        <div v-else>\n            <div class=\"loading-container\">\n                <p>Waiting for Data....</p>\n            </div>\n        </div>\n\n        \n    </div>\n</template>\n\n<style>\n.home {\n    margin-top: 20px;\n    font-size: 20px;\n}\n\n.graph-container {\n  margin-top: 20px;\n}\n\n.chart {\n  overflow: visible;\n}\n\n.form-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  \n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.label-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.labels {\n    text-align: center;\n    width: 100%\n}\n\n.x-options, .y-options {\n  width: 80%;\n  padding: 10px;\n  border-radius: 5px;\n\n}\n\n.submit-container {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n}\n\n.player-input-container {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n}\n\n.player-button {\n    height: 62px;\n    margin-left: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.list-item {\n    padding-bottom: 15px;\n}\n\n.player-list-options {\n    display: flex;\n    justify-content: center;\n    padding: 10px;\n    height: 400px;\n}\n\n.season-container{\n    margin-top: 10px;\n}\n\n\n.loading-container {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n}\n\n.example-container {\n    margin-top: 30px;\n  text-align: center;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AACI,QAAA,iBAAiB,WAAW,IAAI;AAQpC,UAAM,cAAc;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEI,QAAA,UAAU,IAAI,EAEjB;AAEG,QAAA,YAAY,IAAI,EAAE;AAUtB,UAAM,eAAe,IAAI;AAAA,MACvB,OAAO;AAAA,QACL,IAAI;AAAA,MACN;AAAA,MAGA,OAAO;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,YAAY;AAAA,UACV,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,YACL,OAAO;AAAA,YACP,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,UAAU;AAAA,UAAA;AAAA,QAEd;AAAA,QACA,eAAe;AAAA,QACf,YAAY;AAAA,QAGZ,QACA;AAAA,UACE,WAAW,SAAS,KAAK;AACvB,mBAAO,WAAW,GAAG,EAAE,QAAQ,CAAC;AAAA,UAAA;AAAA,QAClC;AAAA,MAEJ;AAAA,MAEA,OAAO;AAAA,QACL,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,YAAY;AAAA,UACV,MAAM;AAAA,UACN,OAAO;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,YACL,OAAO;AAAA,YACP,UAAU;AAAA,YACV,YAAY;AAAA,YACZ,YAAY;AAAA,YACZ,UAAU;AAAA,UAAA;AAAA,QACZ;AAAA,MAEJ;AAAA,MAEA,OAAO;AAAA,QACL,SAAS;AAAA;AAAA,QACT,YAAY;AAAA,UACV,SAAS;AAAA;AAAA,UAET,SAAS;AAAA,UACT,gBAAgB;AAAA,QAAA;AAAA,MAEpB;AAAA,MAEA,MAAK;AAAA,QACH,MAAM;AAAA,QACN,SAAS;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,QAAA;AAAA,MAEX;AAAA,MAEA,OAAO;AAAA,QACL,WAAW;AAAA,MAAA;AAAA,IACb,CACD;AA8DG,QAAA,eAAe,IAAI,KAAK;AACxB,QAAA,gBAAgB,IAAI,KAAK;AACzB,QAAA,cAAc,IAAI,EAAE;AAGpB,QAAA,SAAS,IAAI,EAAE;AAGf,QAAA,YAAY,IAAI,IAAI;AACpB,QAAA,YAAY,IAAI,IAAI;AACpB,QAAA,SAAS,IAAI,IAAI;AAGjB,QAAA,eAAe,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}